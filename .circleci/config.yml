# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
# These environment variables must be set in CircleCI UI
#
# DOCKERHUB_REPO - docker hub repo, format: <username>/<repo>
# DOCKER_EMAIL   - login info for docker hub
# DOCKER_USER
# DOCKER_PASS

version: 2
jobs:
  build:
    docker:
      - image: docker:19.03.13-git
    steps:
      - setup_remote_docker:
          version: 19.03.13
      - checkout
      - run:
          name: Install pip
          command: |
            apk add --no-cache bash gcc libffi-dev make musl-dev openssl-dev python3 python3-dev && \
            python3 -m ensurepip && \
            rm -r /usr/lib/python*/ensurepip && \
            pip3 install --upgrade docker-compose invoke pip && \
            if [[ ! -e /usr/bin/pip  ]]; then ln -s pip3 /usr/bin/pip; fi && \
            if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi && \
            rm -r /root/.cache
          environment:
            CRYPTOGRAPHY_DONT_BUILD_RUST: 1
      - run:
          name: Create version.json
          command: |
            invoke version > version.json && \
            mkdir /artifacts && \
            cp version.json /artifacts/version.json
      - run:
          name: Login to Dockerhub
          command: |
            if [[ -z "${DOCKER_USER}" || -z "${DOCKER_PASS}" ]]; then
              echo "Skipping Login to Dockerhub, credentials not available."
            else
              echo "${DOCKER_PASS}" | docker login -u="${DOCKER_USER}" --password-stdin
            fi
      - run: invoke build
      - run: invoke buildtest
      - run: invoke test
      - run: docker inspect $(invoke imageid)
      - run: invoke imageid | tee /artifacts/docker-image-shasum256.txt
      - deploy:
          name: Deploy to docker hub
          command: |
            [[ -n "$DOCKERHUB_REPO" && -n "$DOCKER_USER" && -n "$DOCKER_PASS" ]] || exit 0
            docker tag "${DOCKERHUB_REPO}" "${DOCKERHUB_REPO}:${CIRCLE_SHA1}"
            docker push "${DOCKERHUB_REPO}:${CIRCLE_SHA1}"
            if [[ "$CIRCLE_BRANCH" == "master" ]]; then
              docker push "${DOCKERHUB_REPO}:latest"
            fi
      - store_artifacts:
          path: /artifacts
